name: Android CI

on:
  push:
    branches: 
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      
    - name: Build with Gradle
      run: ./gradlew assembleDebug
      
    - name: Upload Google Cloud
      env:
        S3KEY: ${{ secrets.S3KEY }}
        S3SECRET: ${{ secrets.S3SECRET }}
        AWSPATH: ${{ secrets.AWSPATH }}
        BUCKET: ${{ secrets.BUCKET }}
      run: |
        function putS3
        {
          path=$1
          file=$(basename "$path")
          newfilename="${file%.*}-$(date +%s).${file##*.}"
          date=$(date +"%a, %d %b %Y %T %z")
          acl="x-amz-acl:public-read"
          FILEURL="https://storage.googleapis.com/$BUCKET$AWSPATH$newfilename"
          content_type='application/x-compressed-tar'
          string="PUT\n\n$content_type\n$date\n$acl\n/$BUCKET$AWSPATH$newfilename"
          signature=$(echo -en "${string}" | openssl sha1 -hmac "${S3SECRET}" -binary | base64)
          curl -X PUT -T "$path" \
            -H "Host: storage.googleapis.com" \
            -H "Date: $date" \
            -H "Content-Type: $content_type" \
            -H "$acl" \
            -H "Authorization: AWS ${S3KEY}:$signature" \
            "$FILEURL"
        }
        apk=$(find app/build/outputs/apk/debug -iname '*.apk' | head -n 1)
        putS3 "$apk" 
        echo "Debug URL: $FILEURL" >> fileurls.txt
        exit 0
        
    - name: Notify Discord & Email
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        ZAPIER_WEBHOOK: ${{ secrets.ZAPIER_WEBHOOK }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        APP_NAME: Github Actions
      run: |
        pip install requests
        python .deploy/generate_version.py --release.dir="app/build/outputs/apk/debug"
        python .deploy/deploy.py \
          --app.url="$(cat fileurls.txt)" \
          --app.name="$APP_NAME" \
          --app.version="$(cat .deploy/version.txt)" \
          --changelog.file="CHANGELOG.md" \
          --email.to="$EMAIL_TO"

